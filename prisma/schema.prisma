generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int      @id @default(autoincrement())
  email           String   @unique
  name            String?
  password        String
  role            Role     @default(USER)
  isEmailVerified Boolean  @default(false)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  Token           Token[]
}

model Comprador {
  id        Int      @id @default(autoincrement())
  codigo    String   @unique
  nombre    String
  apellido  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  prestamo   Prestamo?
}

model Token {
  id          Int       @id @default(autoincrement())
  token       String
  type        TokenType
  expires     DateTime
  blacklisted Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      Int
  user        User      @relation(fields: [userId], references: [id])
}

model Image {
  id        Int      @id @default(autoincrement())
  fileName  String
  filePath  String
  createdAt DateTime @default(now())
}

model Category {
  id        Int      @id @default(autoincrement())
  title     String    @unique
  createdAt DateTime @default(now())
  Book      Book[]
}

model Book {
  id         Int      @id @default(autoincrement())
  categoryId Int
  code       String
  title      String  @unique
  autor      String
  cantidad   Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  category   Category @relation(fields: [categoryId], references: [id])
  prestamo   Prestamo?
}

model Prestamo {
  id   Int  @id @default(autoincrement())
  compradorId   Int  @unique
  bookId    Int  @unique
  fechaPrestamo   DateTime @default(now())
  fechaDevolucion  DateTime
  codigo    String   @unique
  status    PrestamoType
  comprador   Comprador @relation(fields: [compradorId], references: [id])
  book     Book @relation(fields: [bookId], references: [id])
}

enum PrestamoType {
  DEVUELTO
  PENDIENTE
}

enum Role {
  USER
  ADMIN
}

enum TokenType {
  ACCESS
  REFRESH
  RESET_PASSWORD
  VERIFY_EMAIL
}
